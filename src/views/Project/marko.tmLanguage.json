{
  "plist": {
    "dict": {
      "key": [
        "fileTypes",
        "name",
        "patterns",
        "repository",
        "scopeName",
        "uuid"
      ],
      "array": [{
          "string": "marko"
        },
        {
          "dict": [{
              "key": "include",
              "string": "#scriptlet"
            },
            {
              "key": "include",
              "string": "#special-js-tags"
            },
            {
              "key": "include",
              "string": "#js-code-block"
            },
            {
              "key": "include",
              "string": "#component-style"
            },
            {
              "key": "include",
              "string": "#comment-concise-line"
            },
            {
              "key": "include",
              "string": "#comment-concise-block"
            },
            {
              "key": "include",
              "string": "#comment-html"
            },
            {
              "key": "include",
              "string": "#comment-html-tag"
            },
            {
              "key": "include",
              "string": "#html-block-concise"
            },
            {
              "key": "include",
              "string": "#html-line-concise"
            },
            {
              "key": "include",
              "string": "#cdata"
            },
            {
              "key": "include",
              "string": "#doctype"
            },
            {
              "key": "include",
              "string": "#tag-script-concise"
            },
            {
              "key": "include",
              "string": "#tag-style-concise"
            },
            {
              "key": "include",
              "string": "#tag-concise"
            },
            {
              "key": "include",
              "string": "#tag-html"
            },
            {
              "key": "include",
              "string": "#placeholder-patterns"
            }
          ]
        }
      ],
      "string": [
        "Marko",
        "text.marko",
        "BC8F1816-9AB4-4571-97E8-787F6C925E07"
      ],
      "dict": {
        "key": [
          "attr-assignment-concise",
          "attr-assignment-html",
          "attr-js-block",
          "attr-no-value",
          "attr-semicolon",
          "attr-special",
          "attr-spread-concise",
          "attr-spread-html",
          "attr-stuff-concise",
          "attr-stuff-html",
          "attr-with-arg",
          "cdata",
          "comment-block",
          "comment-concise-block",
          "comment-concise-line",
          "comment-html",
          "comment-html-tag",
          "comment-line",
          "component-style",
          "component-style-css",
          "component-style-less",
          "doctype",
          "expression",
          "expression-common",
          "expression-constant",
          "expression-group-braces",
          "expression-group-brackets",
          "expression-group-parens",
          "expression-hex",
          "expression-no-gt",
          "expression-numeric",
          "expression-operator-binary",
          "expression-operator-gt",
          "expression-operator-special",
          "expression-operator-unary",
          "expression-special-class",
          "expression-string-double",
          "expression-string-escapes",
          "expression-string-single",
          "expression-string-template",
          "expression-ternary-if",
          "html-block-concise",
          "html-line-block-concise",
          "html-line-concise",
          "js",
          "js-code-block",
          "open-tag-end",
          "open-tag-end-script",
          "open-tag-end-style",
          "placeholder",
          "placeholder-escaped",
          "placeholder-escaped-escaped",
          "placeholder-patterns",
          "scriptlet",
          "special-js-tags",
          "tag-concise",
          "tag-html",
          "tag-name-concise",
          "tag-name-custom-concise",
          "tag-name-custom-html",
          "tag-name-dynamic-concise",
          "tag-name-dynamic-html",
          "tag-name-html",
          "tag-name-open-tag-only-html",
          "tag-name-script-html",
          "tag-name-shorthand-html",
          "tag-name-shorthand-no-tag-name-html",
          "tag-name-style-html",
          "tag-params",
          "tag-script-body-block",
          "tag-script-body-line",
          "tag-script-concise",
          "tag-style-body-block",
          "tag-style-body-line",
          "tag-style-concise"
        ],
        "dict": [{
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "(?:\\s+|[,])(?:(key)|([a-zA-Z][a-zA-Z]*)|([_a-zA-Z0-9][a-zA-Z0-9:_.-]*))\\s*([=])\\s*",
              "(?=([,;]|\\s|$))"
            ],
            "dict": {
              "key": [
                "1",
                "2",
                "3",
                "4"
              ],
              "dict": [{
                  "key": "name",
                  "string": "support.function.marko-attribute"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                },
                {
                  "key": "name",
                  "string": "punctuation.separator.key-value.html"
                }
              ]
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "(?:\\s+|[,])(?:(key)|([a-zA-Z][a-zA-Z]*)|([_a-zA-Z0-9][a-zA-Z0-9:_.-]*))\\s*([=])\\s*",
              "(?=[,;]|\\s|/>|>)"
            ],
            "dict": {
              "key": [
                "1",
                "2",
                "3",
                "4"
              ],
              "dict": [{
                  "key": "name",
                  "string": "support.function.marko-attribute"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                },
                {
                  "key": "name",
                  "string": "punctuation.separator.key-value.html"
                }
              ]
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression-no-gt"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "\\s\\{",
              "\\}"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.section.scope.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.section.scope.end.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#js"
              }
            }
          },
          {
            "key": [
              "captures",
              "match"
            ],
            "dict": {
              "key": [
                "1",
                "2",
                "3"
              ],
              "dict": [{
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.html"
                }
              ]
            },
            "string": "\\s+(?:([a-zA-Z][a-zA-Z]*)|(data-[a-zA-Z0-9-]*)|([a-zA-Z0-9][a-zA-Z0-9:_.-]+))(?=\\s|/>|>|$)"
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "([;])",
              "(?=\\n)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "punctuation.terminator.statement.js"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#comment-line"
                },
                {
                  "key": "include",
                  "string": "#comment-block"
                }
              ]
            }
          },
          {
            "key": [
              "captures",
              "match"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "support.function.marko-attribute"
              }
            },
            "string": "\\s+(else)\\b"
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "(?:\\s+|[,])(\\.\\.\\.)\\s*",
              "(?=([,;]|\\s|$))"
            ],
            "dict": {
              "key": "5",
              "dict": {
                "key": "name",
                "string": "punctuation.separator.key-value.html"
              }
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "(?:\\s+|[,])(\\.\\.\\.)\\s*",
              "(?=[,;]|\\s|/>|>)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "punctuation.separator.key-value.html"
              }
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression-no-gt"
              }
            }
          },
          {
            "key": "patterns",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#comment-line"
                },
                {
                  "key": "include",
                  "string": "#comment-block"
                },
                {
                  "key": [
                    "begin",
                    "end",
                    "patterns"
                  ],
                  "string": [
                    "\\s[\\[]",
                    "[\\]]"
                  ],
                  "array": {
                    "dict": {
                      "key": "include",
                      "string": "#attr-stuff-concise"
                    }
                  }
                },
                {
                  "key": [
                    "begin",
                    "end"
                  ],
                  "string": [
                    "[,]\\s*$",
                    "(?=\\s)"
                  ]
                },
                {
                  "key": "include",
                  "string": "#attr-with-arg"
                },
                {
                  "key": "include",
                  "string": "#attr-assignment-concise"
                },
                {
                  "key": "include",
                  "string": "#attr-spread-concise"
                },
                {
                  "key": "include",
                  "string": "#attr-no-value"
                },
                {
                  "key": "include",
                  "string": "#placeholder"
                },
                {
                  "key": "include",
                  "string": "#attr-js-block"
                },
                {
                  "key": "include",
                  "string": "#expression"
                },
                {
                  "key": "include",
                  "string": "#attr-semicolon"
                }
              ]
            }
          },
          {
            "key": "patterns",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#comment-block"
                },
                {
                  "key": "include",
                  "string": "#attr-special"
                },
                {
                  "key": "include",
                  "string": "#attr-with-arg"
                },
                {
                  "key": "include",
                  "string": "#attr-assignment-html"
                },
                {
                  "key": "include",
                  "string": "#attr-spread-html"
                },
                {
                  "key": "include",
                  "string": "#attr-no-value"
                },
                {
                  "key": "include",
                  "string": "#placeholder"
                },
                {
                  "key": "include",
                  "string": "#attr-js-block"
                },
                {
                  "key": "include",
                  "string": "#expression-no-gt"
                },
                {
                  "key": "include",
                  "string": "#attr-semicolon"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "\\s+([_a-zA-Z0-9][a-zA-Z0-9:_.-]+)(\\()",
              "\\)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "support.function.marko-attribute"
                  },
                  {
                    "key": "name",
                    "string": "meta.brace.round.js"
                  }
                ]
              },
              {
                "key": "1",
                "dict": {
                  "key": "name",
                  "string": "meta.brace.round.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "name"
            ],
            "string": [
              "<!\\[CDATA\\[",
              "]]>",
              "string.unquoted.cdata.xml"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.begin.xml"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.end.xml"
                }
              }
            ]
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "name"
            ],
            "string": [
              "/\\*",
              "\\*/",
              "comment.block.js"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.comment.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.comment.end.js"
                }
              }
            ]
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "name"
            ],
            "string": [
              "^(\\s*)/\\*",
              "\\*/.*",
              "comment.block.js"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.comment.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.comment.end.js"
                }
              }
            ]
          },
          {
            "key": [
              "begin",
              "comment",
              "end",
              "name"
            ],
            "string": [
              "^(\\s*)//",
              "Single line comment (concise)",
              "$",
              "comment.line.double-slash.marko"
            ]
          },
          {
            "key": [
              "begin",
              "captures",
              "end",
              "name"
            ],
            "string": [
              "\\s*<!--",
              "-->",
              "comment.block.html"
            ],
            "dict": {
              "key": "0",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.comment.html"
              }
            }
          },
          {
            "key": [
              "begin",
              "captures",
              "end",
              "name"
            ],
            "string": [
              "\\s*<html-comment>",
              "</html-comment>",
              "comment.block.html"
            ],
            "dict": {
              "key": "0",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.comment.html"
              }
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "name"
            ],
            "string": [
              "(//)",
              "(?=\\n)",
              "comment.line.double-slash.js"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.comment.js"
              }
            }
          },
          {
            "key": "patterns",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#component-style-less"
                },
                {
                  "key": "include",
                  "string": "#component-style-css"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^(style)(?:\\.([a-z]+))?\\s+(\\{)",
              "\\}"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2",
                  "3"
                ],
                "dict": [{
                    "key": "name",
                    "string": "storage.type.marko.css"
                  },
                  {
                    "key": "name",
                    "string": "storage.modifier.marko.less"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.section.scope.begin.css"
                  }
                ]
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.section.scope.end.css"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "source.css"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^(style)\\.(less)\\s+(\\{)",
              "\\}"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2",
                  "3"
                ],
                "dict": [{
                    "key": "name",
                    "string": "storage.type.marko.less"
                  },
                  {
                    "key": "name",
                    "string": "storage.modifier.marko.less"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.section.scope.begin.less"
                  }
                ]
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.section.scope.end.less"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "source.css.less"
              }
            }
          },
          {
            "key": [
              "begin",
              "captures",
              "end",
              "name",
              "patterns"
            ],
            "string": [
              "<!",
              ">",
              "meta.tag.sgml.html"
            ],
            "dict": {
              "key": "0",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.marko-tag.html"
              }
            },
            "array": {
              "dict": {
                "key": [
                  "begin",
                  "captures",
                  "end",
                  "name",
                  "patterns"
                ],
                "string": [
                  "(?i:DOCTYPE)",
                  "(?=>)",
                  "meta.tag.sgml.doctype.html"
                ],
                "dict": {
                  "key": "1",
                  "dict": {
                    "key": "name",
                    "string": "entity.name.tag.doctype.html"
                  }
                },
                "array": {
                  "dict": {
                    "key": [
                      "match",
                      "name"
                    ],
                    "string": [
                      "\"[^\">]*\"",
                      "string.quoted.double.doctype.identifiers-and-DTDs.html"
                    ]
                  }
                }
              }
            }
          },
          {
            "key": [
              "comment",
              "patterns"
            ],
            "string": "A JavaScript expression",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#expression-common"
                },
                {
                  "key": "include",
                  "string": "#expression-operator-gt"
                }
              ]
            }
          },
          {
            "key": [
              "comment",
              "patterns"
            ],
            "string": "A JavaScript expression",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#expression-string-single"
                },
                {
                  "key": "include",
                  "string": "#expression-string-double"
                },
                {
                  "key": "include",
                  "string": "#expression-string-template"
                },
                {
                  "key": "include",
                  "string": "#expression-group-parens"
                },
                {
                  "key": "include",
                  "string": "#expression-group-brackets"
                },
                {
                  "key": "include",
                  "string": "#expression-group-braces"
                },
                {
                  "key": "include",
                  "string": "#expression-constant"
                },
                {
                  "key": "include",
                  "string": "#expression-hex"
                },
                {
                  "key": "include",
                  "string": "#expression-numeric"
                },
                {
                  "key": "include",
                  "string": "#expression-operator-unary"
                },
                {
                  "key": "include",
                  "string": "#expression-operator-binary"
                },
                {
                  "key": "include",
                  "string": "#expression-operator-special"
                },
                {
                  "key": "match",
                  "string": "[.]([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b"
                },
                {
                  "key": [
                    "captures",
                    "match"
                  ],
                  "dict": {
                    "key": [
                      "1",
                      "2"
                    ],
                    "dict": [{
                        "key": "name",
                        "string": "entity.name.type"
                      },
                      {
                        "key": "name",
                        "string": "entity.name.type"
                      }
                    ]
                  },
                  "string": "\\b(out)[.](global)\\b"
                },
                {
                  "key": [
                    "captures",
                    "match"
                  ],
                  "dict": {
                    "key": [
                      "1",
                      "2"
                    ],
                    "dict": [{
                        "key": "name",
                        "string": "variable.language.js"
                      },
                      {
                        "key": "name",
                        "string": "entity.name.type"
                      }
                    ]
                  },
                  "string": "\\b(this)[.](input|state)\\b"
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(input|state|component|JSON|out)\\b",
                    "entity.name.type"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(let|var|const)\\b",
                    "storage.type.var.js"
                  ]
                },
                {
                  "key": [
                    "captures",
                    "match"
                  ],
                  "dict": {
                    "key": [
                      "1",
                      "2"
                    ],
                    "dict": [{
                        "key": "name",
                        "string": "entity.name.type"
                      },
                      {
                        "key": "name",
                        "string": "entity.name.type"
                      }
                    ]
                  },
                  "string": "\\b(require)[.](resolve)\\b"
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(console|JSON|event|window|setTimeout|setInterval|require)\\b",
                    "entity.name.type"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(this|arguments)\\b",
                    "variable.language.js"
                  ]
                },
                {
                  "key": "include",
                  "string": "#expression-special-class"
                }
              ]
            }
          },
          {
            "key": [
              "captures",
              "match"
            ],
            "dict": {
              "key": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "dict": [{
                  "key": "name",
                  "string": "constant.language.boolean.true.js"
                },
                {
                  "key": "name",
                  "string": "constant.language.boolean.false.js"
                },
                {
                  "key": "name",
                  "string": "constant.language.infinity.js"
                },
                {
                  "key": "name",
                  "string": "constant.language.nan.js"
                },
                {
                  "key": "name",
                  "string": "constant.language.null.js"
                },
                {
                  "key": "name",
                  "string": "constant.language.undefined.js"
                }
              ]
            },
            "string": "(true)|(false)|(Infinity)|(NaN)|(null)|(undefined)"
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "\\{",
              "\\}"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.section.scope.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.section.scope.end.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "\\[",
              "\\]"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "meta.brace.square.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "meta.brace.square.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "\\(",
              "\\)"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "meta.brace.round.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "meta.brace.round.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "match",
              "name"
            ],
            "string": [
              "\\b0[xX][0-9A-Fa-f]+\\b",
              "constant.numeric.hex.js"
            ]
          },
          {
            "key": [
              "comment",
              "patterns"
            ],
            "string": "A JavaScript expression",
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression-common"
              }
            }
          },
          {
            "key": [
              "match",
              "name"
            ],
            "string": [
              "(?x)\n\t\t\t\t(?<!\\w)\t\t\t\t\t\t\t\t\t# Ensure word boundry\n\t\t\t\t(?>\n\t\t\t\t\t(\n\t\t\t\t\t\t(0|[1-9][0-9]*)(\\.[0-9]*)?\t\t# 0 or 1 or 1. or 1.0\n\t\t\t\t\t  | \\.[0-9]+\t\t\t\t\t\t# .1\n\t\t\t\t\t)\n\t\t\t\t\t([eE][+-]?[0-9]+)?\t\t\t\t\t# Exponent\n\t\t\t\t)\n\t\t\t\t(?!\\w)\t\t\t\t\t\t\t\t\t# Ensure word boundry",
              "constant.numeric.js"
            ]
          },
          {
            "key": [
              "captures",
              "match"
            ],
            "dict": {
              "key": "2",
              "dict": {
                "key": "name",
                "string": "keyword.operator.js"
              }
            },
            "string": "(\\s+|\\b)(===|==|!==|!=|<=|<<|&&|\\|\\||<|\\+=|-=|\\*=|/=|%=|[=+*/%|&~^:])(\\s+|\\b)"
          },
          {
            "key": [
              "captures",
              "match"
            ],
            "dict": {
              "key": "2",
              "dict": {
                "key": "name",
                "string": "keyword.operator.js"
              }
            },
            "string": "(\\s+|\\b)(>=|>>|>)(\\s+|\\b)"
          },
          {
            "key": [
              "match",
              "name"
            ],
            "string": [
              "(?<!\\.|\\$)\\b(delete|in|instanceof|new|typeof\\s*|void|with|from|to|step)\\b(?!\\$)",
              "keyword"
            ]
          },
          {
            "key": [
              "match",
              "name"
            ],
            "string": [
              "\\b(!|\\+\\+)\\b|\\b\\-\\-(?<!\\s)",
              "keyword.operator.js"
            ]
          },
          {
            "key": [
              "match",
              "name"
            ],
            "string": [
              "(?<!\\.|\\$)\\b(Array|Boolean|Date|Error|EvalError|Function|Number|Object|RangeError|ReferenceError|RegExp|String|SyntaxError|TypeError|URIError)\\b(?!\\$)",
              "support.class.js"
            ]
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "name",
              "patterns"
            ],
            "string": [
              "\"",
              "\"",
              "string.quoted.double.js"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.end.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": [
                  "match",
                  "name"
                ],
                "string": [
                  "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)",
                  "constant.character.escape.js"
                ]
              }
            }
          },
          {
            "key": "patterns",
            "array": {
              "dict": {
                "key": [
                  "match",
                  "name"
                ],
                "string": [
                  "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)",
                  "constant.character.escape.js"
                ]
              }
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "name",
              "patterns"
            ],
            "string": [
              "'",
              "'",
              "string.quoted.single.js"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.end.js"
                }
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#expression-string-escapes"
                },
                {
                  "key": "include",
                  "string": "#placeholder-patterns"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "name",
              "patterns"
            ],
            "string": [
              "`",
              "`",
              "string.quoted.other.template.js"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.begin.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.string.end.js"
                }
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#expression-string-escapes"
                },
                {
                  "key": [
                    "begin",
                    "beginCaptures",
                    "contentName",
                    "end",
                    "endCaptures",
                    "name",
                    "patterns"
                  ],
                  "string": [
                    "\\$\\{",
                    "source.js",
                    "(\\})",
                    "meta.embedded.line.js"
                  ],
                  "dict": [{
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.embedded.begin.js"
                      }
                    },
                    {
                      "key": [
                        "0",
                        "1"
                      ],
                      "dict": [{
                          "key": "name",
                          "string": "punctuation.section.embedded.end.js"
                        },
                        {
                          "key": "name",
                          "string": "source.js"
                        }
                      ]
                    }
                  ],
                  "array": {
                    "dict": {
                      "key": "include",
                      "string": "#expression"
                    }
                  }
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "end",
              "name",
              "patterns"
            ],
            "string": [
              "\\?",
              ":",
              "meta.ternary-if.js"
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "$self"
              }
            }
          },
          {
            "key": [
              "begin",
              "captures",
              "end",
              "name",
              "patterns"
            ],
            "string": [
              "(\\s*)(-[-]+)\\n",
              "^(\\1\\2|(?!(\\1)))",
              "meta.section.marko-html-block"
            ],
            "dict": {
              "key": "2",
              "dict": {
                "key": "name",
                "string": "keyword.operator.marko"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#cdata"
                },
                {
                  "key": "include",
                  "string": "#comment-html"
                },
                {
                  "key": "include",
                  "string": "#comment-html-tag"
                },
                {
                  "key": "include",
                  "string": "#tag-html"
                },
                {
                  "key": "include",
                  "string": "#js-code-line"
                },
                {
                  "key": "include",
                  "string": "#js-code-block"
                },
                {
                  "key": "include",
                  "string": "#placeholder-patterns"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "\\s*([-][-]+)\\n",
              "(?!\\2)|(\\2\\1)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "keyword.operator.marko.blah"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#cdata"
                },
                {
                  "key": "include",
                  "string": "#comment-html"
                },
                {
                  "key": "include",
                  "string": "#comment-html-tag"
                },
                {
                  "key": "include",
                  "string": "#tag-html"
                },
                {
                  "key": "include",
                  "string": "#placeholder-patterns"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "end",
              "patterns"
            ],
            "string": [
              "\\s*([-][-]+)",
              "(?=\\n)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "keyword.operator.marko"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#cdata"
                },
                {
                  "key": "include",
                  "string": "#comment-html"
                },
                {
                  "key": "include",
                  "string": "#comment-html-tag"
                },
                {
                  "key": "include",
                  "string": "#tag-html"
                },
                {
                  "key": "include",
                  "string": "#placeholder-patterns"
                }
              ]
            }
          },
          {
            "key": "patterns",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#comment-line"
                },
                {
                  "key": "include",
                  "string": "#comment-block"
                },
                {
                  "key": [
                    "applyEndPatternLast",
                    "begin",
                    "beginCaptures",
                    "end",
                    "endCaptures",
                    "patterns"
                  ],
                  "integer": "1",
                  "string": [
                    "\\{",
                    "\\}"
                  ],
                  "dict": [{
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.scope.begin.js"
                      }
                    },
                    {
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.scope.end.js"
                      }
                    }
                  ],
                  "array": {
                    "dict": {
                      "key": "include",
                      "string": "#js"
                    }
                  }
                },
                {
                  "key": [
                    "applyEndPatternLast",
                    "begin",
                    "beginCaptures",
                    "end",
                    "endCaptures",
                    "patterns"
                  ],
                  "integer": "1",
                  "string": [
                    "\\(",
                    "\\)"
                  ],
                  "dict": [{
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.scope.begin.js"
                      }
                    },
                    {
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.scope.end.js"
                      }
                    }
                  ],
                  "array": {
                    "dict": {
                      "key": "include",
                      "string": "#js"
                    }
                  }
                },
                {
                  "key": [
                    "applyEndPatternLast",
                    "begin",
                    "beginCaptures",
                    "end",
                    "endCaptures",
                    "patterns"
                  ],
                  "integer": "1",
                  "string": [
                    "\\[",
                    "\\]"
                  ],
                  "dict": [{
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.scope.begin.js"
                      }
                    },
                    {
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.section.scope.end.js"
                      }
                    }
                  ],
                  "array": {
                    "dict": {
                      "key": "include",
                      "string": "#js"
                    }
                  }
                },
                {
                  "key": "match",
                  "string": "[.]([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\b"
                },
                {
                  "key": "include",
                  "string": "#expression"
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(break|case|catch|continue|default|do|else|export|finally|for|if|return|switch|throw|try|while|with|import|from|await|async)\\b",
                    "keyword.control.js"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "(\\s+|\\b)(\\=\\>)(\\s+|\\b)",
                    "storage.type.function.arrow.js"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\;",
                    "punctuation.terminator.statement.js"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(function)\\b",
                    "storage.type.function.js"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\b(class)\\b",
                    "entity.name.type.class.js"
                  ]
                },
                {
                  "key": [
                    "match",
                    "name"
                  ],
                  "string": [
                    "\\bextends\\b",
                    "entity.other.inherited-class.js"
                  ]
                },
                {
                  "key": [
                    "begin",
                    "beginCaptures",
                    "end",
                    "endCaptures",
                    "name"
                  ],
                  "string": [
                    "([\\p{L}\\p{Nl}$_][\\p{L}\\p{Nl}$\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*)\\s*(\\()(?=(?:[^\\(\\)]*)?\\)\\s*\\{)",
                    "\\)",
                    "meta.method.js"
                  ],
                  "dict": [{
                      "key": [
                        "1",
                        "2"
                      ],
                      "dict": [{
                          "key": "name",
                          "string": "entity.name.function.js"
                        },
                        {
                          "key": "name",
                          "string": "punctuation.definition.parameters.begin.js"
                        }
                      ]
                    },
                    {
                      "key": "0",
                      "dict": {
                        "key": "name",
                        "string": "punctuation.definition.parameters.END.js"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "contentName",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^\\s*([$])\\s",
              "source.js.embedded",
              "(?=\\n)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "storage.modifier.embedded.js"
              }
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#js"
              }
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "(>)",
              "Concise style tag with CSS code.",
              "(?=</)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.tag.end.open.html"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#cdata"
                },
                {
                  "key": "include",
                  "string": "#comment-html"
                },
                {
                  "key": "include",
                  "string": "#comment-html-tag"
                },
                {
                  "key": "include",
                  "string": "#scriptlet"
                },
                {
                  "key": "include",
                  "string": "#tag-html"
                },
                {
                  "key": "include",
                  "string": "#js-code-block"
                },
                {
                  "key": "include",
                  "string": "#placeholder-patterns"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "(>)",
              "Concise style tag with CSS code.",
              "(?=</)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.tag.end.open.html"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#placeholder-patterns"
                },
                {
                  "key": "include",
                  "string": "#js"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "(>)",
              "Concise style tag with CSS code.",
              "(?=</)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "punctuation.definition.tag.end.open.html"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#placeholder-patterns"
                },
                {
                  "key": "include",
                  "string": "source.css"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "captures",
              "comment",
              "end",
              "name",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "[$][!]?\\{",
              "${ } placeholder note: should be punctuation.section.embedded.js",
              "\\}",
              "meta.section.marko-placeholder"
            ],
            "dict": {
              "key": "0",
              "dict": {
                "key": "name",
                "string": "keyword.operator.marko"
              }
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "comment",
              "match"
            ],
            "string": [
              "\\${",
              "\\\\[$][!]?[{]"
            ]
          },
          {
            "key": [
              "comment",
              "match"
            ],
            "string": [
              "\\\\${",
              "\\\\\\\\(?=[$][!]?[{])"
            ]
          },
          {
            "key": "patterns",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#placeholder-escaped-escaped"
                },
                {
                  "key": "include",
                  "string": "#placeholder-escaped"
                },
                {
                  "key": "include",
                  "string": "#placeholder"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "captures",
              "comment",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "<%",
              "Scriptlet block",
              "%>"
            ],
            "dict": {
              "key": "0",
              "dict": {
                "key": "name",
                "string": "keyword.operator.scriptlet.marko"
              }
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#js"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "contentName",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^\\s*(?:(class)|(static)|(import))\\s",
              "source.js.embedded",
              "(?=\\n)"
            ],
            "dict": {
              "key": [
                "1",
                "2",
                "3"
              ],
              "dict": [{
                  "key": "name",
                  "string": "storage.type.class.js"
                },
                {
                  "key": "name",
                  "string": "storage.modifier.marko"
                },
                {
                  "key": "name",
                  "string": "storage.modifier.marko"
                }
              ]
            },
            "array": {
              "dict": {
                "key": "include",
                "string": "#js"
              }
            }
          },
          {
            "key": "patterns",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-name-custom-concise"
                },
                {
                  "key": "include",
                  "string": "#tag-name-dynamic-concise"
                },
                {
                  "key": "include",
                  "string": "#tag-name-concise"
                }
              ]
            }
          },
          {
            "key": [
              "comment",
              "patterns"
            ],
            "string": "HTML tag within the non-concise syntax",
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-name-open-tag-only-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-script-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-style-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-shorthand-no-tag-name-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-shorthand-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-custom-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-dynamic-html"
                },
                {
                  "key": "include",
                  "string": "#tag-name-html"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^\\s*(([a-zA-Z0-9_-]+)([.#][a-zA-Z0-9_.#-]*)?)(?=(\\s+(?![=])|$|\\(|\\|))",
              "A concise tag name",
              "(?=\\n)"
            ],
            "dict": {
              "key": [
                "1",
                "3"
              ],
              "dict": [{
                  "key": "name",
                  "string": "entity.name.tag.concise"
                },
                {
                  "key": "name",
                  "string": "entity.other.attribute-name.shorthand"
                }
              ]
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#html-line-block-concise"
                },
                {
                  "key": "include",
                  "string": "#html-line-concise"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-concise"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^\\s*(for|if|unless|while|else-if|else|var|assign|macro|invoke|include|await|[a-zA-Z0-9_]+([:])[a-zA-Z0-9_:-]*|[@][a-zA-Z0-9_-]+)(?=(\\s+(?![=])|$|[(]|\\|))",
              "A concise custom tag name",
              "(?=\\n)"
            ],
            "dict": {
              "key": "1",
              "dict": {
                "key": "name",
                "string": "support.function.marko-tag.concise"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#html-line-concise"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-concise"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)(for|if|unless|while|else-if|else|var|assign|macro|invoke|include|await|[a-zA-Z0-9_]+[:][a-zA-Z0-9\\-_:]*|[@][a-zA-Z0-9_-]+)(?=(>|/>|\\s|\\(|\\|))",
              "The beginning of a custom/special HTML tag",
              "(</)(\\2)?(>)|(/>)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "support.function.marko-tag.open.html"
                  }
                ]
              },
              {
                "key": [
                  "1",
                  "2",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "support.function.marko-tag.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "comment",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^\\s*(?=\\$\\{.*\\})",
              "A concise custom tag name",
              "(?=\\n)"
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#placeholder"
                },
                {
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#html-line-concise"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-concise"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)(?=\\$\\{.*\\})",
              "The beginning of a regular HTML tag in non-concise mode",
              "(</)(\\2)?(>)|(/>)"
            ],
            "dict": [{
                "key": "1",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.tag.begin.open.html"
                }
              },
              {
                "key": [
                  "1",
                  "2",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "support.function.marko-tag.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#placeholder"
                },
                {
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)([a-zA-Z0-9-]+)(?=(>|/>|\\s|\\(|\\|))",
              "The beginning of a regular HTML tag in non-concise mode",
              "(</)(\\2)?(>)|(/>)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.open.html"
                  }
                ]
              },
              {
                "key": [
                  "1",
                  "2",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)(base|br|col|hr|embed|img|input|keygen|link|meta|param|source|track|wbr|lasso-img)(?=(>|/>|\\s|\\(|\\|))",
              "HTML tags that are open tag only",
              "(>|/>)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.open.html"
                  }
                ]
              },
              {
                "key": "1",
                "dict": {
                  "key": "name",
                  "string": "punctuation.definition.tag.end.self-close.html"
                }
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)(script)(?=(>|/>|\\s|\\(|\\|))",
              "HTML style tag",
              "(</)(script)?(>)|/>"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.script.open.html"
                  }
                ]
              },
              {
                "key": [
                  "1",
                  "2",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.script.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end-script"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)(([a-zA-Z0-9_-]+)([#.][a-zA-Z0-9_#.:-]+))(?=(>|/>|\\s+(?![=])|\\(|\\|))",
              "HTML tag with shorthand ID/class parts",
              "(</)((\\3)(\\4)?)?(>)|(/>)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.other.attribute-name.shorthand"
                  }
                ]
              },
              {
                "key": [
                  "1",
                  "3",
                  "4",
                  "5",
                  "6"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.close.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.other.attribute-name.shorthand"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)([#.][a-zA-Z0-9_#.:-]+)(?=(>|/>|\\s|\\(|\\|))",
              "HTML style tag",
              "(</)(\\2|div)(>)|(/>)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.other.attribute-name.shorthand"
                  }
                ]
              },
              {
                "key": [
                  "1",
                  "2",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "endCaptures",
              "patterns"
            ],
            "string": [
              "(<)(style)(?=(>|/>|\\s|\\(|\\|))",
              "HTML style tag",
              "(</)(style)?(>)|(/>)"
            ],
            "dict": [{
                "key": [
                  "1",
                  "2"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.open.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.style.open.html"
                  }
                ]
              },
              {
                "key": [
                  "1",
                  "2",
                  "3",
                  "4"
                ],
                "dict": [{
                    "key": "name",
                    "string": "punctuation.definition.tag.begin.close.html"
                  },
                  {
                    "key": "name",
                    "string": "entity.name.tag.style.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.close.html"
                  },
                  {
                    "key": "name",
                    "string": "punctuation.definition.tag.end.self-close.html"
                  }
                ]
              }
            ],
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#tag-params"
                },
                {
                  "key": "include",
                  "string": "#attr-stuff-html"
                },
                {
                  "key": "include",
                  "string": "#open-tag-end-style"
                }
              ]
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "end",
              "endCaptures",
              "patterns"
            ],
            "integer": "0",
            "string": [
              "\\|",
              "\\|"
            ],
            "dict": [{
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "meta.pipe.js"
                }
              },
              {
                "key": "0",
                "dict": {
                  "key": "name",
                  "string": "meta.pipe.js"
                }
              }
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#expression"
              }
            }
          },
          {
            "key": [
              "begin",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "(\\s*-[-]+)",
              "HTML script tag with nested JavaScript code",
              "(\\1)[.]*$"
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#js"
              }
            }
          },
          {
            "key": [
              "begin",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "\\s+-[-]+\\s",
              "HTML script tag with nested JavaScript code",
              "(?=\\n)"
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "#js"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^(\\s*)(script)(?=(\\s|$|\\())",
              "HTML script tag with nested JavaScript code",
              "^(?!(\\1\\s)|\\s*$)"
            ],
            "dict": {
              "key": "2",
              "dict": {
                "key": "name",
                "string": "entity.name.tag.script.marko.concise"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#attr-stuff-concise"
                },
                {
                  "key": "include",
                  "string": "#tag-script-body-line"
                },
                {
                  "key": "include",
                  "string": "#tag-script-body-block"
                }
              ]
            }
          },
          {
            "key": [
              "begin",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "(\\s*[-][-]+)",
              "HTML script tag with nested CSS code",
              "(\\1)[.]*$"
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "source.css"
              }
            }
          },
          {
            "key": [
              "begin",
              "comment",
              "end",
              "patterns"
            ],
            "string": [
              "\\s[-][-]+\\s",
              "HTML style tag with nested CSS code",
              "(?=\\n)"
            ],
            "array": {
              "dict": {
                "key": "include",
                "string": "source.css"
              }
            }
          },
          {
            "key": [
              "applyEndPatternLast",
              "begin",
              "beginCaptures",
              "comment",
              "end",
              "name",
              "patterns"
            ],
            "integer": "1",
            "string": [
              "^(\\s*)(style)(?=(\\s|$|\\())",
              "style tag with CSS code.",
              "^(?!(\\1\\s)|\\s*$)",
              "meta.tag.other.style"
            ],
            "dict": {
              "key": "2",
              "dict": {
                "key": "name",
                "string": "entity.name.tag.style.marko.concise"
              }
            },
            "array": {
              "dict": [{
                  "key": "include",
                  "string": "#attr-stuff-concise"
                },
                {
                  "key": "include",
                  "string": "#tag-style-body-line"
                },
                {
                  "key": "include",
                  "string": "#tag-style-body-block"
                }
              ]
            }
          }
        ]
      }
    },
    "_version": "1.0"
  }
}