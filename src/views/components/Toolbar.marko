
class {
	onCreate(){	
    this.state = {
      active: false
    }
    GState.bind( this, ['marketplace', 'workspace'] ) 
  }
  /*
	onToggle( id ){
		let 
		action = 'open',
		values = Object.values( this.state.activeExtensions ),
		maxIndex = Math.max( ...( values.map( ({ zindex }) => { return zindex } ) ) )

		if( this.state.activeExtensions.hasOwnProperty( id )
				&& this.state.activeExtensions[ id ].zindex == maxIndex )
			action = 'close'
		
		// Open or Close aside component
		GState.extension[ action ]( id )
		// Close marketplace if active
		GState.marketplace.close()
	}
  */
	onRun(){
		GState.workspace.layout({ mode: !this.state.active ? 'auto' : 'ns' }) 
		this.state.active = !this.state.active
	}
	onMarketPlace(){ GState.marketplace[ this.state.marketplace ? 'close' : 'open' ]() }
	onWorkspaceSwitch(){ GState.workspace.layout({ mode: this.state.workspace.mode == 'qs' ? 'hs' : 'qs' }) }
	onWorkspaceFullScreen(){ GState.workspace.layout({ mode: this.state.workspace.mode !== 'fs' ? 'fs' : 'auto' }) }
}

<div.position-fixed.zindex-3.top-0.right-0.h-100.theme-bg-lighten.text-center style="width:4rem">
  <ul.list-unstyled.py-2>
    <li.cursor-pointer><Bx.px-1.py-2.font-medium-5 type="cloud"/></li>
    <li.cursor-pointer><Bx.px-1.py-2.font-medium-5 type="user"/></li>
    <li.cursor-pointer><Bx.px-1.py-2.font-medium-5 type="bell"/></li>
    <li.cursor-pointer><Bx.px-1.py-2.font-medium-5 type="cog"/></li>
    <li.cursor-pointer><Bx.px-1.py-2.font-medium-5 type="info-circle"/></li>
    <li.cursor-pointer><Bx.px-1.py-2.font-medium-5 type="file"/></li>

		<!-- Workspace mode controls -->
		<!-- <li.position-relative>
			<span class="bg-active cursor-pointer"
						title=Locale('Add App')
						on-click('onMarketPlace')>
				<Bx.white-text type=(state.marketplace ? 'x' : 'plus')/>
			</span>
		</li> -->
    
		<!-- Workspace mode controls -->
		<li class=`position-absolute width-100 bottom-0 ${ !state.active && !state.marketplace ? 'd-none' : ''}` 
				style="margin-bottom:12rem">
			$ const isQuaterScreen = state.workspace.mode == 'qs'
			<span class="bg-active cursor-pointer"
						title=Locale( isQuaterScreen ? 'Half Screen' : 'Quarter Screen' )
						on-click('onWorkspaceSwitch')>
				<Bx.px-1.py-2.font-medium-5 type=`dock-${isQuaterScreen ? 'left' : 'right'}` class="white-text"/>
			</span>
		</li>

		<!-- Full workspace toggle -->
		<li class=`position-absolute width-100 bottom-0 ${!state.active && !state.marketplace ? 'd-none' : ''}`
				style="margin-bottom:7rem">
			$ const isFullScreen = state.workspace.mode == 'fs'
			<span class="bg-active cursor-pointer" 
						title=Locale( isFullScreen ? 'Exit Full Screen' : 'Full Screen' )
						on-click('onWorkspaceFullScreen')>
				<Bx.px-1.py-2.font-medium-5 type=`${isFullScreen ? 'exit-' : ''}fullscreen` class="white-text"/>
			</span>
		</li>
    
		<!-- Run/Stop -->
		<li class=`position-absolute width-100 bottom-0` 
				style="margin-bottom:2.5rem">
			<span class="bg-active cursor-pointer"
						title=Locale( !state.active ? 'Run' : 'Close' )
						on-click('onRun')>
				<Bx.px-1.py-2.font-large-1 type=`${!state.active ? 'play' : 'pause'}` class="white-text"/>
			</span>
		</li>
  </ul>
</div>