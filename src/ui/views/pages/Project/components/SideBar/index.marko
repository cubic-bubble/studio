
class {
  onCreate(){
    this.state = {
      active: null,
      showMenu: true
    }
    GState.bind( this, ['ws'])

    this.noChange = false
    this.Actives = {}
  }
  onInput({ type, dataset }){
    
    if( !dataset ) return
    switch( type ){
      case 'IDE': if( isEmpty( dataset ) ) return
                  this.Actives[ type ] = { list: [ dataset.directory ] }
          break
    }
    
    this.state.active = type
  }
  onShowMenu(){
    this.state.showMenu = !this.state.showMenu
    this.noChange = true
    setTimeout( () => this.noChange = false, 100 )

    this.emit( 'show-menu', this.state.showMenu )
  }
  onRun(){ this.emit( 'action', 'run', !this.input.status.emulator, false ) }
}

<div.in-block.section-block.px-0.border-right style="width:24rem">
  <div.w-100.d-flex.align-items-center.border-bottom style="height:3rem">
    <div.w-100>
      
      <ul.list-inline.m-0.px-50>
        <!-- <li><Bx.font-medium-5.px-1 type="wifi-off"/></li> -->
        <li>
          <Bx.font-medium-5.px-1.cursor-pointer
              type=`menu-alt-${state.showMenu ? 'right' : 'left'}`
              on-click('onShowMenu')/>
        </li>

        <!-- Coding Project actions -->
        <if( input.type == 'IDE' )>
          <li.float-right>
            <Bx.font-medium-5.px-75.cursor-pointer
                title=Locale('Git branch')
                type="git-branch"/>
          </li>
          <li.float-right>
            <Bx.font-medium-5.px-75.cursor-pointer
                title=Locale('Git commit')
                type="git-commit"/>
          </li>

          <!-- Run/Stop emulator control -->
          <if( !['loading', 'stopping'].includes( input.status.emulator ) )>
            <li.float-right>
              <Bx.font-medium-5.px-75.cursor-pointer
                  title=Locale( !input.status.emulator ? 'Run' : 'Close' )
                  type=`${!input.status.emulator ? 'play' : 'pause'}`
                  on-click('onRun')/>
            </li>
          </if>


          
        </if>
      </ul>
    </div>
  </div>
  
  <div.position-relative.overflow-auto style="height:calc(100% - 3rem)">
    <for|type, dataset| in=component.Actives>
      <div.position-absolute.theme-bg.h-100.top-0.left-0.right-0.py-1
          key=type
          class=( state.active == type ? 'zindex-2' : 'zindex-1')>
        <Switch by=type>
          <@case is="IDE">
            <Directory ...dataset
                        active=input.active
                        on-open( element => component.emit( 'action', 'open', element ) )
                        on-move( element => component.emit( 'action', 'move', element ) )
                        on-rename( element => component.emit( 'action', 'rename', element ) )
                        on-remove( element => component.emit( 'action', 'remove', element ) )
                        on-new-dir( element => component.emit( 'action', 'new-dir', element ) )
                        on-new-file( element => component.emit( 'action', 'new-file', element ) )/>
          </@case>
        </Switch>
      </div>
    </for>
  </div>
</div>